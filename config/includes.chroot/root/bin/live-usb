#!/usr/bin/env python
"""
install the live system to a partition
on a USB drive
"""

import argparse
import os
import subprocess
import sys
import tempfile



class Installer:
    """
    Class that handles the actual installation
    """
    partition = ""
    verbose = False
    cocky = False

    def __init__(self):
        self.get_args()

    def get_args(self):
        """
        Get the command line argument(s)
        """
        desc = """
        Install the live system to a partition on a USB drive.
        """
        details = """
        The partition must be (V)FAT formatted and bootable.
        """

        parser = argparse.ArgumentParser( description = desc,
                                          epilog = details )
        parser.add_argument("partition", help="the target partition")
        parser.add_argument("-v", "--verbose", 
                            help="increase output verbosity",
                            action="store_true")
        parser.add_argument("-y", "--yes", 
                            help="do not ask for confirmation",
                            action="store_true")
        args = parser.parse_args()
        self.partition = args.partition
        if args.verbose:
            self.verbose = True
        if args.yes:
            self.cocky = True

    def warn(self):
        """
        Warn the user that this is a dangerous script.
        """
        print("************************************************\n"
              "* This script does not do any sanity checks!!! *\n"
              "* It modifies the partition you specify, and   *\n"
              "* may overwrite or delete important data.      *\n"
              "************************************************\n"
              " Going to install the live system to %s." % self.partition)
        print(" Are you sure you want to continue [y/N]?"),
        answer = raw_input()
        if len(answer) == 0 or answer[0].lower() != 'y':
            sys.exit(1)


    def rsync(self, source, target):
        """
        Rsync a file or directory from source to target
        """
        args = []
        opts = ['-a', '--delete']
        
        if self.verbose == True:
            opts.append('-v')       

        args.append("rsync")
        args.extend(opts)
        args.append(source)
        args.append(target)
        subprocess.call(args)

    def copy(self):
        """
        Copy the live system to the USB drive.
        """
        source = "/lib/live/mount/medium"
        target = tempfile.mkdtemp()
    
        subprocess.call(["mount", self.partition, target])
        self.rsync(source + "/live/",
              target + "/live/")
        self.rsync(source + "/md5sum.txt",
              target + "/md5sum.txt")
        self.rsync(source + "/isolinux/",  
              target + "/syslinux/")
        self.rsync(source + "/isolinux/isolinux.cfg",  
              target + "/syslinux/syslinux.cfg")
        subprocess.call(["syslinux", "--install", self.partition])
        subprocess.call(["umount", self.partition])
        os.rmdir(target)

    def run(self):
        """
        Start the actual process.
        """
        if self.cocky == False:
            self.warn()
        self.copy()

if (__name__ == '__main__'):
    INST = Installer()
    INST.run()
